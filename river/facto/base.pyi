import abc
from .. import optim as optim, utils as utils
from typing import Any

class BaseFM(metaclass=abc.ABCMeta):
    n_factors: Any = ...
    weight_optimizer: Any = ...
    latent_optimizer: Any = ...
    loss: Any = ...
    sample_normalization: Any = ...
    l1_weight: Any = ...
    l2_weight: Any = ...
    l1_latent: Any = ...
    l2_latent: Any = ...
    intercept: Any = ...
    intercept_lr: Any = ...
    weight_initializer: Any = ...
    weights: Any = ...
    latent_initializer: Any = ...
    latents: Any = ...
    clip_gradient: Any = ...
    seed: Any = ...
    def __init__(self, n_factors: Any, weight_optimizer: Any, latent_optimizer: Any, loss: Any, sample_normalization: Any, l1_weight: Any, l2_weight: Any, l1_latent: Any, l2_latent: Any, intercept: Any, intercept_lr: Any, weight_initializer: Any, latent_initializer: Any, clip_gradient: Any, seed: Any) -> None: ...
    def learn_one(self, x: Any, y: Any, sample_weight: float = ...): ...
