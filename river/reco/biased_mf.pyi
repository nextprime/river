from . import base
from river import optim
from typing import Any

class BiasedMF(base.Recommender):
    n_factors: Any = ...
    u_bias_optimizer: Any = ...
    i_bias_optimizer: Any = ...
    u_latent_optimizer: Any = ...
    i_latent_optimizer: Any = ...
    loss: Any = ...
    l2_bias: Any = ...
    l2_latent: Any = ...
    weight_initializer: Any = ...
    latent_initializer: Any = ...
    clip_gradient: Any = ...
    seed: Any = ...
    global_mean: Any = ...
    u_biases: Any = ...
    i_biases: Any = ...
    u_latents: Any = ...
    i_latents: Any = ...
    def __init__(self, n_factors: Any=..., bias_optimizer: optim.Optimizer=..., latent_optimizer: optim.Optimizer=..., loss: optim.losses.Loss=..., l2_bias: Any=..., l2_latent: Any=..., weight_initializer: optim.initializers.Initializer=..., latent_initializer: optim.initializers.Initializer=..., clip_gradient: Any=..., seed: int=...) -> None: ...
