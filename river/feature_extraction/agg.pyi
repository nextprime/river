import typing
from river import base, stats
from typing import Any

class Agg(base.Transformer):
    on: Any = ...
    by: Any = ...
    how: Any = ...
    groups: Any = ...
    feature_name: Any = ...
    def __init__(self, on: str, by: typing.Union[str, typing.List[str]], how: stats.Univariate) -> None: ...
    def learn_one(self, x: Any): ...
    def transform_one(self, x: Any): ...

class TargetAgg(base.SupervisedTransformer):
    by: Any = ...
    how: Any = ...
    target_name: Any = ...
    groups: Any = ...
    feature_name: Any = ...
    def __init__(self, by: typing.Union[str, typing.List[str]], how: stats.Univariate, target_name: Any=...) -> None: ...
    def learn_one(self, x: Any, y: Any): ...
    def transform_one(self, x: Any): ...
