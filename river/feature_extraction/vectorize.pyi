import pandas as pd
import typing
from river import base
from typing import Any

class VectorizerMixin:
    on: Any = ...
    strip_accents: Any = ...
    lowercase: Any = ...
    preprocessor: Any = ...
    tokenizer: Any = ...
    ngram_range: Any = ...
    processing_steps: Any = ...
    def __init__(self, on: str=..., strip_accents: Any=..., lowercase: Any=..., preprocessor: typing.Callable=..., tokenizer: typing.Callable=..., ngram_range: Any=...) -> None: ...
    def process_text(self, x: Any): ...

class BagOfWords(base.Transformer, VectorizerMixin):
    def transform_one(self, x: Any): ...
    def transform_many(self, X: pd.Series) -> pd.DataFrame: ...
    def learn_many(self, X: Any): ...

class TFIDF(BagOfWords):
    normalize: Any = ...
    dfs: Any = ...
    n: int = ...
    def __init__(self, normalize: Any=..., on: str=..., strip_accents: Any=..., lowercase: Any=..., preprocessor: typing.Callable=..., tokenizer: typing.Callable=..., ngram_range: Any=...) -> None: ...
    def learn_one(self, x: Any): ...
    def transform_one(self, x: Any): ...
