import river.base
import typing
from . import base
from typing import Any, Optional

class Differencer:
    coeffs: Any = ...
    def __init__(self, d: Any, m: int = ...) -> None: ...
    def __add__(self, other: Any): ...
    def diff(self, y: float, y_previous: list) -> Any: ...
    def undiff(self, y: float, y_previous: typing.List[float]) -> Any: ...

class SNARIMAX(base.Forecaster):
    p: Any = ...
    d: Any = ...
    q: Any = ...
    m: Any = ...
    sp: Any = ...
    sd: Any = ...
    sq: Any = ...
    regressor: Any = ...
    differencer: Any = ...
    y_trues: Any = ...
    errors: Any = ...
    def __init__(self, p: int, d: int, q: int, m: int=..., sp: int=..., sd: int=..., sq: int=..., regressor: river.base.Regressor=...) -> None: ...
    def learn_one(self, y: Any, x: Optional[Any] = ...): ...
    def forecast(self, horizon: Any, xs: Optional[Any] = ...): ...
