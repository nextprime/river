from .._attribute_test import AttributeSplitSuggestion as AttributeSplitSuggestion
from abc import ABCMeta, abstractmethod
from typing import Any

class AttributeObserver(metaclass=ABCMeta):
    def __init__(self) -> None: ...
    @abstractmethod
    def update(self, att_val: Any, target_val: Any, sample_weight: Any) -> AttributeObserver: ...
    @abstractmethod
    def probability_of_attribute_value_given_class(self, att_val: Any, target_val: Any) -> float: ...
    @abstractmethod
    def best_evaluated_split_suggestion(self, criterion: Any, pre_split_dist: Any, att_idx: Any, binary_only: Any) -> AttributeSplitSuggestion: ...
