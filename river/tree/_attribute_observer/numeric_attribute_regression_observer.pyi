from .._attribute_test import AttributeSplitSuggestion as AttributeSplitSuggestion, NumericAttributeBinaryTest as NumericAttributeBinaryTest
from .attribute_observer import AttributeObserver as AttributeObserver
from river.stats import Var as Var
from river.utils import VectorDict as VectorDict
from typing import Any

class NumericAttributeRegressionObserver(AttributeObserver):
    class Node:
        att_val: Any = ...
        estimator: Any = ...
        def __init__(self, att_val: Any, target: Any, sample_weight: Any) -> None: ...
        def insert_value(self, att_val: Any, target: Any, sample_weight: Any) -> None: ...
    def __init__(self) -> None: ...
    def update(self, att_val: Any, target_val: Any, sample_weight: Any): ...
    def probability_of_attribute_value_given_class(self, att_val: Any, class_val: Any) -> None: ...
    def best_evaluated_split_suggestion(self, criterion: Any, pre_split_dist: Any, att_idx: Any, binary_only: bool = ...): ...
    def remove_bad_splits(self, criterion: Any, last_check_ratio: Any, last_check_vr: Any, last_check_e: Any, pre_split_dist: Any) -> None: ...
