from .._attribute_test import AttributeSplitSuggestion as AttributeSplitSuggestion, NumericAttributeBinaryTest as NumericAttributeBinaryTest
from .attribute_observer import AttributeObserver as AttributeObserver
from typing import Any

class NumericAttributeClassObserverBinaryTree(AttributeObserver):
    class Node:
        class_count_left: Any = ...
        class_count_right: Any = ...
        cut_point: Any = ...
        def __init__(self, val: Any, label: Any, sample_weight: Any) -> None: ...
        def insert_value(self, val: Any, label: Any, sample_weight: Any) -> None: ...
    def __init__(self) -> None: ...
    def update(self, att_val: Any, class_val: Any, sample_weight: Any): ...
    def probability_of_attribute_value_given_class(self, att_val: Any, class_val: Any): ...
    def best_evaluated_split_suggestion(self, criterion: Any, pre_split_dist: Any, att_idx: Any, binary_only: Any): ...
