from .._attribute_test import AttributeSplitSuggestion as AttributeSplitSuggestion, NumericAttributeBinaryTest as NumericAttributeBinaryTest
from .attribute_observer import AttributeObserver as AttributeObserver
from river import utils as utils
from river.utils.histogram import Bin as Bin
from typing import Any

class NumericAttributeClassObserverHistogram(AttributeObserver):
    n_bins: Any = ...
    n_splits: Any = ...
    hists: Any = ...
    def __init__(self, n_bins: int=..., n_splits: int=...) -> None: ...
    def update(self, att_val: Any, class_val: Any, sample_weight: Any): ...
    def probability_of_attribute_value_given_class(self, att_val: Any, class_val: Any): ...
    def best_evaluated_split_suggestion(self, criterion: Any, pre_split_dist: Any, att_idx: Any, binary_only: Any): ...

def decimal_range(start: Any, stop: Any, num: Any) -> None: ...
