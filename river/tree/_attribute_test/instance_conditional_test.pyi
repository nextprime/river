import typing
from abc import ABCMeta, abstractmethod
from typing import Any

class InstanceConditionalTest(metaclass=ABCMeta):
    def __init__(self) -> None: ...
    @abstractmethod
    def branch_for_instance(self, x: dict) -> int: ...
    @staticmethod
    @abstractmethod
    def max_branches() -> int: ...
    @abstractmethod
    def describe_condition_for_branch(self, branch: int, shorten: Any=...) -> str: ...
    @abstractmethod
    def attrs_test_depends_on(self) -> typing.List: ...
