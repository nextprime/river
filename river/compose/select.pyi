import typing
from river import base
from typing import Any

class Discard(base.Transformer):
    blacklist: Any = ...
    def __init__(self, *blacklist: typing.Tuple[base.typing.FeatureName]) -> None: ...
    def transform_one(self, x: Any): ...

class Select(base.Transformer):
    whitelist: Any = ...
    def __init__(self, *whitelist: typing.Tuple[base.typing.FeatureName]) -> None: ...
    def transform_one(self, x: Any): ...

class SelectType(base.Transformer):
    types: Any = ...
    def __init__(self, *types: typing.Tuple[type]) -> None: ...
    def transform_one(self, x: Any): ...
