from . import base as base, mean as mean, summing as summing
from typing import Any

class Cov(base.Bivariate):
    ddof: Any = ...
    mean_x: Any = ...
    mean_y: Any = ...
    cov: int = ...
    def __init__(self, ddof: int = ...) -> None: ...
    def update(self, x: Any, y: Any, w: float = ...): ...
    def get(self): ...
    def __iadd__(self, other: Any): ...
    def __add__(self, other: Any): ...
    def __isub__(self, other: Any): ...
    def __sub__(self, other: Any): ...

class RollingCov(base.Bivariate):
    ddof: Any = ...
    sx: Any = ...
    sy: Any = ...
    sxy: Any = ...
    def __init__(self, window_size: Any, ddof: int = ...) -> None: ...
    @property
    def window_size(self): ...
    def update(self, x: Any, y: Any): ...
    def get(self): ...
