from . import base as base, mean as mean
from typing import Any

class Var(base.Univariate):
    ddof: Any = ...
    mean: Any = ...
    sigma: float = ...
    def __init__(self, ddof: int = ...) -> None: ...
    def update(self, x: Any, w: float = ...): ...
    def get(self): ...
    def __iadd__(self, other: Any): ...
    def __add__(self, other: Any): ...
    def __isub__(self, other: Any): ...
    def __sub__(self, other: Any): ...

class RollingVar(base.RollingUnivariate):
    ddof: Any = ...
    sos: int = ...
    rolling_mean: Any = ...
    def __init__(self, window_size: Any, ddof: int = ...) -> None: ...
    @property
    def window_size(self): ...
    def update(self, x: Any): ...
    @property
    def correction_factor(self): ...
    def get(self): ...
