import abc
from river import base as base
from typing import Any

class Statistic(base.Base):
    def get(self) -> None: ...

class Univariate(base.Base):
    def update(self, x: Any) -> None: ...
    def revert(self, x: Any) -> None: ...
    @property
    def name(self): ...
    def __or__(self, other: Any): ...

class RollingUnivariate(Univariate, metaclass=abc.ABCMeta):
    @property
    @abc.abstractmethod
    def window_size(self) -> Any: ...
    @property
    def name(self): ...

class Bivariate(Statistic):
    def update(self, x: Any, y: Any) -> None: ...
