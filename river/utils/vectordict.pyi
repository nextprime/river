__pyx_unpickle_VectorDict: Any
missing: Any

class VectorDict:
    __hash__: Any = ...
    __pyx_vtable__: Any = ...
    def __init__(self, *args, **kwargs) -> None: ...
    def abs(self) -> Any: ...
    def clear(self) -> Any: ...
    def get(self, key, *args, **kwargs) -> Any: ...
    def items(self) -> Any: ...
    def keys(self) -> Any: ...
    def max(self) -> Any: ...
    def maximum(self, other) -> Any: ...
    def min(self) -> Any: ...
    def minimum(self, other) -> Any: ...
    def pop(self, *args, **kwargs) -> Any: ...
    def popitem(self) -> Any: ...
    def setdefault(self, key, *args, **kwargs) -> Any: ...
    def to_dict(self) -> Any: ...
    def to_numpy(self, fields) -> Any: ...
    def update(self, *args, **kwargs) -> Any: ...
    def values(self) -> Any: ...
    def with_mask(self, mask, copy = ...) -> Any: ...
    def __abs__(self) -> Any: ...
    def __add__(self, other) -> Any: ...
    def __contains__(self, other) -> Any: ...
    def __delitem__(self, other) -> Any: ...
    def __eq__(self, other) -> Any: ...
    def __format__(self, format_spec) -> Any: ...
    def __ge__(self, other) -> Any: ...
    def __getitem__(self, index) -> Any: ...
    def __gt__(self, other) -> Any: ...
    def __iadd__(self, other) -> Any: ...
    def __imul__(self, other) -> Any: ...
    def __ipow__(self, other) -> Any: ...
    def __isub__(self, other) -> Any: ...
    def __iter__(self) -> Any: ...
    def __itruediv__(self, other) -> Any: ...
    def __le__(self, other) -> Any: ...
    def __len__(self) -> Any: ...
    def __lt__(self, other) -> Any: ...
    def __matmul__(self, *args, **kwargs) -> Any: ...
    def __mul__(self, other) -> Any: ...
    def __ne__(self, other) -> Any: ...
    def __neg__(self) -> Any: ...
    def __pos__(self) -> Any: ...
    def __pow__(self, other) -> Any: ...
    def __radd__(self, other) -> Any: ...
    def __reduce__(self) -> Any: ...
    def __reduce_cython__(self) -> Any: ...
    def __rmatmul__(self, *args, **kwargs) -> Any: ...
    def __rmul__(self, other) -> Any: ...
    def __rpow__(self, other) -> Any: ...
    def __rsub__(self, other) -> Any: ...
    def __rtruediv__(self, other) -> Any: ...
    def __setitem__(self, index, object) -> Any: ...
    def __setstate__(self, state) -> Any: ...
    def __setstate_cython__(self, __pyx_state) -> Any: ...
    def __sub__(self, other) -> Any: ...
    def __truediv__(self, other) -> Any: ...
