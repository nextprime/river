from river import base
from typing import Any

class LDA(base.Transformer):
    n_components: Any = ...
    number_of_documents: Any = ...
    alpha_theta: Any = ...
    alpha_beta: Any = ...
    tau: Any = ...
    kappa: Any = ...
    vocab_prune_interval: Any = ...
    number_of_samples: Any = ...
    ranking_smooth_factor: Any = ...
    burn_in_sweeps: Any = ...
    maximum_size_vocabulary: Any = ...
    seed: Any = ...
    rng: Any = ...
    counter: int = ...
    truncation_size_prime: int = ...
    truncation_size: int = ...
    word_to_index: Any = ...
    index_to_word: Any = ...
    nu_1: Any = ...
    nu_2: Any = ...
    def __init__(self, n_components: Any=..., number_of_documents: Any=..., alpha_theta: Any=..., alpha_beta: Any=..., tau: Any=..., kappa: Any=..., vocab_prune_interval: Any=..., number_of_samples: Any=..., ranking_smooth_factor: Any=..., burn_in_sweeps: Any=..., maximum_size_vocabulary: Any=..., seed: int=...) -> None: ...
    def learn_transform_one(self, x: dict) -> dict: ...
    def learn_one(self, x: Any): ...
    def transform_one(self, x: Any): ...
